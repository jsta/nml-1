s        = <junk>* ( stmt <junk>* )*

array    = name sect
blank    = ''
c        = real | string | logical | complex
comment  = <wsopt> '!' #'[^\n]*'
complex  = <'('> <wsopt> real <wsopt> <','> <wsopt> real <wsopt> <')'>
dataref  = partref ( '%' partref )*
dec      = '.' uint?
exp      = sign uint | 'e' <wsopt> int | 'd' <wsopt> int
false    = 'f' | 'F'
int      = sign? uint
junk     = <#'[^!&]+'> | <comment>
logical  = <'.'>? ( true | false ) <#'[^/,=\s]*'>
name     = #'[a-zA-Z][a-zA-Z0-9_]{0,30}'
nvsep    = ( <comment> / <ws> )* ( ',' / <ws> ) ( <comment> / <ws> )*
nvseq    = ( nvsubseq <nvsep> )*
nvsubseq = dataref <wsopt> <'='> values
partref  = array | name
r        = uint
real     = int dec? exp? | sign? dec int exp?
sect     = <'('> ( int? ':' int? | int ) ( ':' int )? <')'>
sign     = '-' | '+'
stmt     = <wsopt> <'&'> name <ws> ( <comment> / <ws> )* nvseq <wsopt> <'/'>
string   = "'" ( #'[^\'\n]' | "''" | <"\n"> )* "'" | '"' ( #'[^\"\n]' | '""' | <"\n"> )* '"'
star     = '*'
true     = 't' | 'T'
uint     = #'[0-9]+'
valsep   = <wsopt> ( <','> / <'/'> ) / <ws>
value    = r star c / r star / c
values   = ( <wsopt> ( value / blank ) <valsep> )*
ws       = #'\s+'
wsopt    = #'\s*'
